---
import { readOne, readAll } from "../../lib/markdoc/read";
import { project } from "../../lib/markdoc/frontmatter.schema";
import Renderer from "../../components/Renderer.astro";
import BlogPostMeta from "../../components/BlogPostMeta.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";
import { SITE_URL } from "../../config";

export async function getStaticPaths() {
  const posts = await readAll({
    directory: "projects",
    frontmatterSchema: project,
  });

  // we don't want to generate pages for posts that link to external websites
  const filteredPosts = posts
    .filter((p) => p.frontmatter.draft !== true);

  return filteredPosts.map((post) => {
    return { params: { slug: post.slug } };
  });
}

const { slug } = Astro.params;
if (typeof slug !== "string") {
  throw Error(`slug should be string. Received: ${slug}`);
}

const { content, frontmatter } = await readOne({
  directory: "projects",
  slug,
  frontmatterSchema: project,
});

const ogImageAbsoluteUrl =
  frontmatter.ogImagePath
    ? (
      frontmatter.ogImagePath.includes('https://')
        ? frontmatter.ogImagePath
        : new URL(frontmatter.ogImagePath, SITE_URL).toString()
    )
    : undefined;
---

<ContentLayout
  title={frontmatter.title}
  date={frontmatter.date}
  duration={frontmatter.duration}
  tags={frontmatter.tags}
  url={frontmatter.url}
>
  <BlogPostMeta
    title={frontmatter.title}
    description={frontmatter.description}
    publishDate={frontmatter.date.toISOString()}
    pagePath={`/projects/${slug}`}
    ogImageAbsoluteUrl={ogImageAbsoluteUrl}
    slot="meta"
  />
  <Renderer content={content} slot="content" />
</ContentLayout>
